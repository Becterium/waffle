syntax = "proto3";

package waffle.media.v1;

import "google/api/annotations.proto";

option go_package = "api/media/service/v1;v1";
option java_multiple_files = true;
option java_package = "dev.waffle.api.media.v1";
option java_outer_classname = "MediaProtoV1";

service Media{
  // image
  rpc UploadImages(UploadImagesReq)returns(UploadImagesReply){
  }
  rpc UploadUserImage(UploadUserImageReq)returns(UploadUserImageReply){
  }
  rpc VerifyUserImageUpload(VerifyUserImageUploadReq)returns(VerifyUserImageUploadReply){
  }
  rpc VerifyImagesUpload(VerifyImagesUploadReq)returns(VerifyImagesUploadReply){
  }
  rpc GetImage(GetImageReq)returns(GetImageReply){
  }
  rpc GetImageByQueryKVsAndPageAndOrderByDESC(GetImageByQueryKVsAndPageAndOrderByDESCReq)returns(GetImageByQueryKVsAndPageAndOrderByDESCReply){
  }
  // image - tag
  rpc AddImageTag(AddImageTagReq)returns(AddImageTagReply){
  }
  rpc SearchImageTagByNameLike(SearchImageTagByNameLikeReq)returns(SearchImageTagByNameLikeReply){
  }
  rpc ReloadCategoryRedisImageTag(ReloadCategoryRedisImageTagReq)returns(ReloadCategoryRedisImageTagReply){
  }
  // collection
  rpc CreateCollection(CreateCollectionReq)returns(CreateCollectionReply){
  }
  rpc StarImage(StarImageReq)returns(StarImageReply){
  }
  rpc UnStarImage(UnStarImageReq)returns(UnStarImageReply){
  }
  rpc FindCollectionByImageId(FindCollectionByImageIdReq)returns(FindCollectionByImageIdReply){
  }
  rpc FindCollectionByCollectionId(FindCollectionByCollectionIdReq)returns(FindCollectionByCollectionIdReply){
  }
  // video
  rpc UploadVideo(UpLoadVideoReq)returns(UpLoadVideoReply){
  }
  rpc GetVideo(GetVideoReq)returns(GetVideoReply){
  }
}

// image
message UploadImagesReq {
  repeated string image_name = 1;
}

message UploadImagesReply{
  message Image {
    string upload_url = 1;
    string image_name = 2;
    string image_uuid = 3;
  }
  repeated Image result = 1;
}

message UploadUserImageReq{
  string image_name = 1;
}

message UploadUserImageReply{
  string upload_url = 1;
  string avatar_name = 2;
  string avatar_uuid = 3;
}

message VerifyUserImageUploadReq{
  string avatar_name = 1;
  string avatar_uuid = 2;
}

message VerifyUserImageUploadReply{
  bool success = 1;
  string message = 2;
  string avatar_url = 3;
}

message VerifyImagesUploadReq{
  message Info {
    string image_name = 1;
    string image_uuid = 2;
    string category = 3;
    string purity = 4;
    repeated uint64 tags = 5;
  }
  repeated Info image_info = 1;
}

message VerifyImagesUploadReply{
  bool success = 1;
  string message = 2;
}

message GetImageReq{
  string image_url = 1;
}

message GetImageReply{
  message Tags {
    uint64 tag_id = 1;
    string tag_name = 2;
  }
  repeated Tags tags = 1;
  uint64 uploader_id = 2;//user id
  string uploader_url = 3; //user URL
  string category = 4;
  string purity = 5;
  int64 size = 6;
  int64 views = 7;
  string link = 8;//image_URL
  string Thumbnail = 9;//image_UUID
  string Image_name = 10;
  uint64 image_id = 11;
}

message GetImageByQueryKVsAndPageAndOrderByDESCReq{
  int64 page = 1;
  int64 size = 2;
  repeated string query_KVs = 3;
}

message GetImageByQueryKVsAndPageAndOrderByDESCReply{
  message Images {
    uint64 image_id = 1;
    string link = 2;//image_URL
  }
  repeated Images images = 1;
}

// image -tag
message AddImageTagReq{
  string name = 1;
  string parentName = 2;
}

message AddImageTagReply{
}

message SearchImageTagByNameLikeReq{
  string name = 1;
}

message SearchImageTagByNameLikeReply{
  message Tags {
    string name = 1;
    int64 id = 2;
  }
  repeated Tags tags = 1;
}

message ReloadCategoryRedisImageTagReq{}

message ReloadCategoryRedisImageTagReply{}

// collection
message CreateCollectionReq{
  int64 user_id = 1;
}

message CreateCollectionReply{}

message StarImageReq{
  int64 image_id = 1;
}

message StarImageReply{}

message UnStarImageReq{
  int64 image_id = 1;
}

message UnStarImageReply{}

message FindCollectionByImageIdReq{
  int64 image_id = 1;
}

message FindCollectionByImageIdReply{
  repeated int64 collection_id = 1;
}

message FindCollectionByCollectionIdReq{
  int64 collection_id = 1;
}

message FindCollectionByCollectionIdReply{
  message Info {
    int64 image_id = 1;
    string image_name = 2;
    string image_url = 3;
    string category = 4;
  }
  int64 collection_id = 1;
  repeated Info info = 2;
}
// video
message UpLoadVideoReq{
  string video_name = 1;
  bytes video_data = 2;
  string video_type = 3;
}

message UpLoadVideoReply{
  string url = 1;
  bool success = 2;
  string message = 3;
}
//todo: Need to define
message GetVideoReq{}

message GetVideoReply{}

